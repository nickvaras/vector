<!-- Launch file for Vector platform startup -->
<launch>
    <arg name="wheel_type" value="$(optenv VECTOR_WHEEL_TYPE standard)"/>
    
    <!--System watchdog-->
    <node pkg="vector_ros" type="vector_wd" name="vector1_wd" output="screen" if="$(optenv VECTOR_POWERS_PC_ONBOARD false)"/>
        
    <!-- Vector Base platform ROS Driver -->
    <node pkg="vector_ros" ns="vector" type="vector_driver" name="vector_driver" respawn="true" output="screen">
        <param name="use_platform_odometry" value="$(optenv VECTOR_USE_PLATFORM_ODOMETRY false)" />
    </node>

    <!-- Platform specific robot state publisher and parameters -->
    <include file="$(find vector_description)/launch/vector_upload.launch"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
        <param name="publish_frequency" type="double" value="100.0" />
        <param name="tf_prefix" value=""/>
    </node>
  
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    
    <!-- Platform specific configuration -->
    <node name="dynamic_reconfigure_load" pkg="dynamic_reconfigure" type="dynparam"
        args="load /vector/vector_driver $(find vector_bringup)/launch/platform/config/vector_params.yaml" if="$(eval 1 if 'standard'==arg('wheel_type') else 0)"/>
        
    <node name="dynamic_reconfigure_load" pkg="dynamic_reconfigure" type="dynparam"
        args="load /segway/segway_driver $(find segway_bringup)/launch/platform/config/vector_params_HD.yaml" if="$(eval 1 if 'HD'==arg('wheel_type') else 0)"/>

        
    <!-- Node for publishing web topics for the dispatch UI-->
    <node name="web_topics" pkg="si_utils" type="web_topics" /> 
        
</launch>
