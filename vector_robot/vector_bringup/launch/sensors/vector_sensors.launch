<!-- Launch file for Vector sensor startup -->

<launch>
        
    <group unless="$(optenv VECTOR_HAS_SAFETY_LASERS false)">
        <node pkg="sick_tim" type="sick_tim551_2050001" name="front_laser_node" clear_params="true" respawn="true">
            <remap from="scan" to="/vector/front_scan" />
            <param name="max_ang" value="2.235"/>
            <param name="min_ang" value="-2.235"/>
            <param name="intensity" type="bool" value="true" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="front_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="false" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="10.0" />
            <param name="hostname" type="string" value="10.66.171.8" />
            <param name="port" type="string" value="2112" />
            <param name="timelimit" type="int" value="5" />
        </node>

        <node pkg="sick_tim" type="sick_tim551_2050001" name="rear_laser_node" respawn="false">
            <remap from="scan" to="/vector/rear_scan" />
            <param name="max_ang" value="2.235"/>
            <param name="min_ang" value="-2.235"/>
            <param name="intensity" type="bool" value="true" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="rear_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="false" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="10.0" />
            <param name="hostname" type="string" value="10.66.171.9" />
            <param name="port" type="string" value="2112" />
            <param name="timelimit" type="int" value="5" />
            <!-- Older versions of the scanner firmware report an incorrect time_increment.
             If you get a warning about time_increment, uncomment this. -->
            <!-- <param name="time_increment" type="double" value="0.000061722" /-->
        </node>
    </group>

    <group if="$(optenv VECTOR_HAS_SAFETY_LASERS false)">
        <node name="front_laser_node" pkg="urg_node" type="urg_node" output="screen">
            <remap from="/scan" to="/vector/front_scan"/>
            <remap from="/laser_status" to="/front_laser_status"/>
            <param name="ip_address" value="10.66.171.8"/>
            <param name="frame_id" value="front_laser_link"/>
            <param name="calibrate_time" value="false"/>
            <param name="publish_intensity" value="true"/>
            <param name="publish_multiecho" value="false"/>
            <param name="angle_min" value="-2.235"/>
            <param name="angle_max" value="2.235"/>
        </node>
        
        <node name="rear_laser_node" pkg="urg_node" type="urg_node" output="screen">
            <remap from="/scan" to="/vector/rear_scan"/>
            <remap from="/laser_status" to="/rear_laser_status"/>
            <param name="ip_address" value="10.66.171.9"/>
            <param name="frame_id" value="rear_laser_link"/>
            <param name="calibrate_time" value="false"/>
            <param name="publish_intensity" value="true"/>
            <param name="publish_multiecho" value="false"/>
            <param name="angle_min" value="-2.235"/>
            <param name="angle_max" value="2.235"/>
        </node>
    </group>

	<node pkg="si_utils" type="laserscan_to_pcl2" name="front_scan_to_pcl2">
	    <remap from="scan" to="/vector/front_scan"/>
	    <remap from="points2" to="/vector/front_scan_points2"/>
	</node>

	<node name="front_scan_statistical_outlier_removal" pkg="nodelet" type="nodelet"
        args="standalone pcl/StatisticalOutlierRemoval">
		<remap from="~input" to="/vector/front_scan_points2" />
		<remap from="~output" to="/vector/filtered_front_scan_points2" />
		<rosparam>mean_k: 50</rosparam>
		<rosparam>stddev: 2.0</rosparam>
	</node>
	
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="front_pointcloud_to_laserscan">
        <remap from="cloud_in" to="/vector/filtered_front_scan_points2"/>
        <remap from="scan" to="/vector/filtered_front_scan"/>
        <rosparam>
            target_frame: base_link # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: 0.0
            max_height: 2.0

            angle_min: -3.14
            angle_max: 3.14
            angle_increment: 0.005759587
            scan_time: 0.066666667
            range_min: 0.1
            range_max: 25.0
            use_inf: true
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>
    
	<node pkg="si_utils" type="laserscan_to_pcl2" name="rear_scan_to_pcl2">
	    <remap from="scan" to="/vector/rear_scan"/>
	    <remap from="points2" to="/vector/rear_scan_points2"/>
	</node>

	<node name="rear_scan_statistical_outlier_removal" pkg="nodelet" type="nodelet"
        args="standalone pcl/StatisticalOutlierRemoval">
		<remap from="~input" to="/vector/rear_scan_points2" />
		<remap from="~output" to="/vector/filtered_rear_scan_points2" />
		<rosparam>mean_k: 50</rosparam>
		<rosparam>stddev: 2.0</rosparam>
	</node>
	
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="rear_pointcloud_to_laserscan">
        <remap from="cloud_in" to="/vector/filtered_rear_scan_points2"/>
        <remap from="scan" to="/vector/filtered_rear_scan"/>
        <rosparam>
            target_frame: base_link # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: 0.0
            max_height: 2.0

            angle_min: -3.14
            angle_max: 3.14
            angle_increment: 0.005759587
            scan_time: 0.066666667
            range_min: 0.1
            range_max: 25.0
            use_inf: true
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>
    
    <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
        <param name="destination_frame" value="base_link"/>
        <param name="cloud_destination_topic" value="/vector/merged_cloud"/>
        <param name="scan_destination_topic" value="/vector/combined_scan"/>
        <param name="laserscan_topics" value ="/vector/filtered_front_scan /vector/filtered_rear_scan"/>
    </node>
    
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="base_laser_filter" clear_params="true" respawn="true">
        <remap from="scan" to="/vector/combined_scan" />
        <remap from="scan_filtered" to="/vector/base_scan_filtered" />
        <param name="target_frame" value="base_link" />
        <param name="high_fidelity" value="true" />
        <rosparam command="load" 
            file="$(find vector_bringup)/launch/sensors/config/laser_scan_filter.yaml" />
    </node>
    
    <group if="$(optenv VECTOR_HAS_VLP16 false)">
        <!-- start nodelet manager and driver nodelets -->
        <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
            <arg name="device_ip" value="10.66.171.10"/>
            <arg name="frame_id" value="velodyne_frame"/>
            <arg name="manager" value="velodyne_nodelet_manager" />
            <arg name="model" value="VLP16"/>
            <arg name="port" value="4194"/>
            <arg name="read_fast" value="false"/>
            <arg name="read_once" value="false"/>
            <arg name="repeat_delay" value="0.0"/>
            <arg name="rpm" value="600.0"/>
        </include>

        <!-- start cloud nodelet -->
        <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
            <arg name="calibration" value="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
            <arg name="manager" value="velodyne_nodelet_manager" />
            <arg name="max_range" value="100.0"/>
            <arg name="min_range" value="0.7"/>
        </include>

        <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" 
        args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet velodyne_nodelet_manager">
            <remap from="cloud_in" to="/velodyne_points"/>
            <remap from="scan" to="/vector/scan_3d" />
            <param name="min_height" value="-0.3" />
            <param name="max_height" value="0.3" />
            <param name="angle_min" value="-3.1416" /> <!-- -pi -->
            <param name="angle_max" value="3.1416" /> <!-- pi -->
            <param name="scan_time" value="0.1" />
            <param name="range_max" value="80.0" />
            <param name="range_min" value="0.6" />
            <param name="use_inf" value="true" />
        </node>
    </group>

    <group unless="$(optenv VECTOR_HAS_WEBCAM false)">
    
        <node pkg="cv_camera" type="cv_camera_node" name="cv_camera"/>

        <node pkg="web_video_server" type="web_video_server" name="web_video_server">
            <param name="port" value="8085"/>
        </node>

    </group>
    
</launch> 
    
    
