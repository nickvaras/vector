<?xml version="1.0"?>
<!--
Software License Agreement (BSD)
\file      omni_structure.urdf.xacro
\authors   Patrick Hussey
\copyright Copyright (c) 2015, Stanley Innovation, Inc., All rights reserved.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Stanley Innovation, Inc. nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="vector_base" xmlns:xacro="http://ros.org/wiki/xacro">
    
    <!-- Wheel Mounting Positions and Properties-->
    <xacro:property name="wheel_radius" value="0.0762" />

	<xacro:macro name="vector_base">
	
        <!-- Base link is the center of the robot's chassis between the motors projected on the ground -->
        <link name="base_link"/>
		        
        <joint name="base_chassis_joint" type="fixed">
            <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="base_chassis_link" />
        </joint>
        
        <link name="base_chassis_link">
	    <inertial>
		    <mass value="101.561195" />
		    <origin xyz="-0.000710 -0.000186 0.03813" rpy="0 0 0"/>
		    <inertia ixx="3.126061"  ixy="-0.032687" ixz="-0.086662"
                         iyx="-0.032687" iyy="13.356772" iyz="0.000468"
                         izx="-0.086662" izy="0.000468"  izz="15.218700" />
	    </inertial>
            <collision>
                <xacro:if value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/collision/vector_bw_base_collision.stl" />
				    </geometry>
				</xacro:if>
                <xacro:unless value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/collision/vector_base_collision.stl" />
				    </geometry>
				</xacro:unless>
			</collision>
			<visual>
				<origin xyz="0 0 0" rpy="0 0 0" />
                <xacro:if value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/visual/vector_bw_base.dae" />
				    </geometry>
				</xacro:if>
                <xacro:unless value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/visual/vector_base.dae" />
				    </geometry>
				</xacro:unless>
			</visual>
		</link>
		
        <gazebo reference="base_chassis_link">
			<mu1 value="0.3"/>
			<mu2 value="0.3"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
        </gazebo>
        
        <joint name="payload_plate_joint" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 0" />
            <parent link="base_chassis_link" />
            <child link="payload_plate_link" />
        </joint>
        
        <link name="payload_plate_link">
			<inertial>
				<mass value="6.868901" />
				<origin xyz="0.000219 0.000067 0.209254" />
				<inertia ixx="0.115329"  ixy="-0.000009" ixz="0.000007"
                         iyx="-0.000009"  iyy="0.194172" iyz="0.000002"
                         izx="0.000007" izy="0.000002" izz="0.309399" />
			</inertial>
            <collision>
                <xacro:if value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/collision/dev_payload_plate_collision.stl" />
				    </geometry>
				</xacro:if>
                <xacro:unless value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/collision/std_payload_plate_collision.stl" />
				    </geometry>
				</xacro:unless>
			</collision>
			<visual>
				<origin xyz="0 0 0" rpy="0 0 0" />
                <xacro:if value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/visual/dev_payload_plate.dae" />
				    </geometry>
				</xacro:if>
                <xacro:unless value="$(optenv SI_DEV_VECTOR false)">
				    <geometry>
					    <mesh filename="package://vector_description/meshes/vector_components/visual/std_payload_plate.dae" />
				    </geometry>
				</xacro:unless>
			</visual>
		</link>
		
        <gazebo reference="payload_plate_link">
			<mu1 value="0.3"/>
			<mu2 value="0.3"/>
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
        </gazebo>
        	
		
    </xacro:macro>

</robot>
